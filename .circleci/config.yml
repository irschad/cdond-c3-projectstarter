version: 2.1

### It's a good practice to keep your commands at the top of the config file. In this project, you'll need at least 2 commands:

# commands:
#   destroy-environment:
#     description: Destroy backend and frontend cloudformation stacks given a workflow ID.
#     ...

#   revert-migration:
#     description: Revert the last migration if successfully run in the current workflow.
#     ...

jobs:
  hello-world: # Delete this job when you get started
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Say Hello
          command: |
            echo "Hello World"

  analyze-frontend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Analyze frontend
          command: |
            cd frontend
            npm i
            npm audit fix --audit-level=critical --force
        
  analyze-backend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Analyze backend
          command: |
            cd backend
            npm i
            npm audit fix --audit-level=critical --force
            
  build-frontend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Build frontend
          command: |
            cd frontend
            npm i
            npm run build
            
  build-backend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Build backend
          command: |
            cd backend
            npm i
            npm run build

  test-frontend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Test frontend
          command: |
            cd frontend
            npm i
            npm audit fix --audit-level=critical --force
            npm run test

  test-backend:
    docker:
      - image: circleci/node:10.16.3
    steps:
      - checkout
      - run:
          name: Test backend
          command: |
            cd backend
            npm i
            npm run test

  deploy-frontend-infra:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Deploy frontend infrastructure
          command: |
            aws cloudformation deploy \
              --stack-name auto_frontend \
              --template-file .circleci/files/frontend.yml \
              --region us-east-1 \ 
              --parameter "ID=1"

  deploy-backend-infra:
    docker:
      - image: amazon/aws-cli
    steps:
      - checkout
      - run:
          name: Deploy backend infrastructure
          command: |
            aws cloudformation deploy \
              --stack-name auto_backend \
              --template-file .circleci/files/backend.yml \
              --region us-east-1 \
              --parameter "ID=1"

#  configure-infrastructure:

#  run-migrations:

#  deploy-frontend:

#  deploy-backend:  

#  smoke-test:

#  cloudfront-update:

workflows:
  default:
    jobs:
      - hello-world
      
  frontend:
    jobs:
      - analyze-frontend
      - build-frontend:
          requires:
            - analyze-frontend   
      - test-frontend:
          requires:
            - build-frontend
      - deploy-frontend-infra:
          requires:
            - test-frontend
            
  backend:
    jobs:
      - analyze-backend
      - build-backend: 
          requires:
            - analyze-backend
      - test-backend:
          requires:
            - build-backend
      - deploy-backend-infra:
          requires:
            - test-backend

